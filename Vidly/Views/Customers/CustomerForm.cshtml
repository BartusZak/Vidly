@model Vidly.ViewModels.CustomerFormViewModel

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nowy klient</h2>

@using (Html.BeginForm("Save", "Customers")) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "Coś poszło nie tak..", new { @class = "text-danger" });
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Customer.Name)
            @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Customer.Name)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Customer.Surname)
            @Html.TextBoxFor(m => m.Customer.Surname, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Customer.Birthday)
            @Html.TextBoxFor(m => m.Customer.Birthday, "{0:d MMM yyyy}", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Customer.Birthday)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Customer.MembershipTypeId)
            @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipType, "Id", "Name"), "Wybierz rodzaj konta", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
        </div>

        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Zapisać do Newsletter'a?
            </label>
        </div>
        
        @Html.HiddenFor(m => m.Customer.Id)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Utwórz" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć do listy", "Index")
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}